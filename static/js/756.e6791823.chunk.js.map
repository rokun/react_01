{"version":3,"file":"static/js/756.e6791823.chunk.js","mappings":"mKAWAA,E,SACA,MAGA,GAHeC,EAAAA,EAAAA,IAAAD,IAAAA,GAAAE,EAAAA,EAAAA,GAAA,0wR,oMCoBR,MAAMC,WAAuBC,EAAAA,EAAAA,GAAWC,EAAAA,EAAiB,CAC5DC,WAAY,CAAC,IAAK,IAAK,QADpBC,WAAAA,GAAA,SAAAC,WAQH,KAAOC,eAAgB,EAGvB,KAAOC,MAAQ,GAGf,KAAOC,gBAAiB,EAMxB,KAAOC,SAAW,EAjBlB,iBAA2BC,GACvB,MAAO,CAACC,EACZ,CAoBQC,YAAAA,CAAaC,GACjB,OAAOC,KAAKR,mBACN,uBAAAS,OACqBF,EAAQ,QACvC,CAEmBG,UAAAA,CAAWH,GACtBA,EAAQI,IAAI,oBAGZH,KAAKI,OAASJ,KAAKN,eACb,QACAM,KAAKI,aAAU,EAY7B,CAEmBC,MAAAA,GACf,MAAMN,EAAS,CACXC,KAAKF,aAAqB,IAAYQ,KAAKC,IAAIP,KAAKL,SAAU,IAA3C,KACnBK,KAAKF,aACO,IAAYQ,KAAKE,IAAIR,KAAKL,SAAW,GAAI,GAAhD,MAIT,OAAOc,EAAAA,EAAAA,IAAA1B,IAAAA,GAAAE,EAAAA,EAAAA,GAAA,6KACiBe,KAAKU,iBAFf,CAAC,QAAS,SAKRC,KACJ,CAACC,EAAMC,KAAUJ,EAAAA,EAAAA,IAAAK,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,0WACK2B,EAEMA,GACRG,EAAAA,EAAAA,GAAUhB,EAAOc,OASrD,CAEUH,gBAAAA,GACN,MAAMX,ECpGkBiB,EAC5BhC,EACA6B,KAEA,GAAI7B,EAAO,OAAO,KAClB,MAAM4B,EAAcC,EACfI,gBACAC,QAAO,CAACnB,EAAqBoB,IACtBA,EAAKC,YACErB,EAAcoB,EAAKC,YAEnBrB,GAEZ,IACP,OAAIa,EACOA,EAAYS,OAEZ,IAEf,EDiF8BC,CAAiBtB,KAAKP,MAAOO,KAAKuB,QACpDxB,IACAC,KAAKP,MAAQM,EAErB,CAEmByB,YAAAA,CAAazB,GAC5B0B,MAAMD,aAAazB,GACdC,KAAK0B,aAAa,SACnB1B,KAAK2B,aAAa,OAAQ,cAElC,CAEmBC,OAAAA,CAAQ7B,GACvB0B,MAAMG,QAAQ7B,IACTC,KAAKR,eAAiBO,EAAQI,IAAI,YACnCH,KAAK2B,aAAa,gBAAiB,GAAK3B,KAAKL,UACtCK,KAAK0B,aAAa,kBACzB1B,KAAK6B,gBAAgB,iBAErB9B,EAAQI,IAAI,WACRH,KAAKP,MAAMqC,OACX9B,KAAK2B,aAAa,aAAc3B,KAAKP,OAErCM,EAAQgC,IAAI,WAAa/B,KAAKgC,aAAa,eAE3ChC,KAAK6B,gBAAgB,cA2BjC,EA7HOI,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEC,KAAMC,QAASC,SAAS,KAP3BnD,EAQFoD,UAAA,mBAGAL,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEC,KAAMI,UAVTrD,EAWFoD,UAAA,WAGAL,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEC,KAAMC,QAASC,SAAS,EAAMG,UAAW,qBAb5CtD,EAcFoD,UAAA,oBAGAL,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEG,SAAS,KAhBZnD,EAiBFoD,UAAA,YAGAL,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEC,KAAMM,UAnBTvD,EAoBFoD,UAAA,cAGCL,EAAA,EADPS,EAAAA,EAAAA,GAAM,SAtBExD,EAuBDoD,UAAA,aExCZtD,E,OAAAA,GAAc,qBAAsBe,E","sources":["../node_modules/@spectrum-web-components/progress-circle/src/progress-circle.css.ts","../node_modules/@spectrum-web-components/progress-circle/src/ProgressCircle.ts","../node_modules/@spectrum-web-components/shared/src/get-label-from-slot.ts","../node_modules/@spectrum-web-components/progress-circle/sp-progress-circle.ts"],"sourcesContent":["/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    .fill-submask-2{animation:1s linear infinite spectrum-fill-mask-2}@keyframes spectrum-fill-mask-1{0%{transform:rotate(90deg)}1.69%{transform:rotate(72.3deg)}3.39%{transform:rotate(55.5deg)}5.08%{transform:rotate(40.3deg)}6.78%{transform:rotate(25deg)}8.47%{transform:rotate(10.6deg)}10.17%{transform:rotate(0)}11.86%{transform:rotate(0)}13.56%{transform:rotate(0)}15.25%{transform:rotate(0)}16.95%{transform:rotate(0)}18.64%{transform:rotate(0)}20.34%{transform:rotate(0)}22.03%{transform:rotate(0)}23.73%{transform:rotate(0)}25.42%{transform:rotate(0)}27.12%{transform:rotate(0)}28.81%{transform:rotate(0)}30.51%{transform:rotate(0)}32.2%{transform:rotate(0)}33.9%{transform:rotate(0)}35.59%{transform:rotate(0)}37.29%{transform:rotate(0)}38.98%{transform:rotate(0)}40.68%{transform:rotate(0)}42.37%{transform:rotate(5.3deg)}44.07%{transform:rotate(13.4deg)}45.76%{transform:rotate(20.6deg)}47.46%{transform:rotate(29deg)}49.15%{transform:rotate(36.5deg)}50.85%{transform:rotate(42.6deg)}52.54%{transform:rotate(48.8deg)}54.24%{transform:rotate(54.2deg)}55.93%{transform:rotate(59.4deg)}57.63%{transform:rotate(63.2deg)}59.32%{transform:rotate(67.2deg)}61.02%{transform:rotate(70.8deg)}62.71%{transform:rotate(73.8deg)}64.41%{transform:rotate(76.2deg)}66.1%{transform:rotate(78.7deg)}67.8%{transform:rotate(80.6deg)}69.49%{transform:rotate(82.6deg)}71.19%{transform:rotate(83.7deg)}72.88%{transform:rotate(85deg)}74.58%{transform:rotate(86.3deg)}76.27%{transform:rotate(87deg)}77.97%{transform:rotate(87.7deg)}79.66%{transform:rotate(88.3deg)}81.36%{transform:rotate(88.6deg)}83.05%{transform:rotate(89.2deg)}84.75%{transform:rotate(89.2deg)}86.44%{transform:rotate(89.5deg)}88.14%{transform:rotate(89.9deg)}89.83%{transform:rotate(89.7deg)}91.53%{transform:rotate(90.1deg)}93.22%{transform:rotate(90.2deg)}94.92%{transform:rotate(90.1deg)}96.61%{transform:rotate(90deg)}98.31%{transform:rotate(89.8deg)}to{transform:rotate(90deg)}}@keyframes spectrum-fill-mask-2{0%{transform:rotate(180deg)}1.69%{transform:rotate(180deg)}3.39%{transform:rotate(180deg)}5.08%{transform:rotate(180deg)}6.78%{transform:rotate(180deg)}8.47%{transform:rotate(180deg)}10.17%{transform:rotate(179.2deg)}11.86%{transform:rotate(164deg)}13.56%{transform:rotate(151.8deg)}15.25%{transform:rotate(140.8deg)}16.95%{transform:rotate(130.3deg)}18.64%{transform:rotate(120.4deg)}20.34%{transform:rotate(110.8deg)}22.03%{transform:rotate(101.6deg)}23.73%{transform:rotate(93.5deg)}25.42%{transform:rotate(85.4deg)}27.12%{transform:rotate(78.1deg)}28.81%{transform:rotate(71.2deg)}30.51%{transform:rotate(89.1deg)}32.2%{transform:rotate(105.5deg)}33.9%{transform:rotate(121.3deg)}35.59%{transform:rotate(135.5deg)}37.29%{transform:rotate(148.4deg)}38.98%{transform:rotate(161deg)}40.68%{transform:rotate(173.5deg)}42.37%{transform:rotate(180deg)}44.07%{transform:rotate(180deg)}45.76%{transform:rotate(180deg)}47.46%{transform:rotate(180deg)}49.15%{transform:rotate(180deg)}50.85%{transform:rotate(180deg)}52.54%{transform:rotate(180deg)}54.24%{transform:rotate(180deg)}55.93%{transform:rotate(180deg)}57.63%{transform:rotate(180deg)}59.32%{transform:rotate(180deg)}61.02%{transform:rotate(180deg)}62.71%{transform:rotate(180deg)}64.41%{transform:rotate(180deg)}66.1%{transform:rotate(180deg)}67.8%{transform:rotate(180deg)}69.49%{transform:rotate(180deg)}71.19%{transform:rotate(180deg)}72.88%{transform:rotate(180deg)}74.58%{transform:rotate(180deg)}76.27%{transform:rotate(180deg)}77.97%{transform:rotate(180deg)}79.66%{transform:rotate(180deg)}81.36%{transform:rotate(180deg)}83.05%{transform:rotate(180deg)}84.75%{transform:rotate(180deg)}86.44%{transform:rotate(180deg)}88.14%{transform:rotate(180deg)}89.83%{transform:rotate(180deg)}91.53%{transform:rotate(180deg)}93.22%{transform:rotate(180deg)}94.92%{transform:rotate(180deg)}96.61%{transform:rotate(180deg)}98.31%{transform:rotate(180deg)}to{transform:rotate(180deg)}}@keyframes spectrum-fills-rotate{0%{transform:rotate(-90deg)}to{transform:rotate(270deg)}}:host{--spectrum-progress-circle-track-border-color:var(--spectrum-gray-300);--spectrum-progress-circle-fill-border-color:var(--spectrum-accent-content-color-default);--spectrum-progress-circle-track-border-color-over-background:var(--spectrum-transparent-white-300);--spectrum-progress-circle-fill-border-color-over-background:var(--spectrum-transparent-white-900);--spectrum-progress-circle-size:var(--spectrum-progress-circle-size-medium);--spectrum-progress-circle-thickness:var(--spectrum-progress-circle-thickness-medium);--spectrum-progress-circle-track-border-style:solid}:host([size=s]){--spectrum-progress-circle-size:var(--spectrum-progress-circle-size-small);--spectrum-progress-circle-thickness:var(--spectrum-progress-circle-thickness-small)}:host([size=l]){--spectrum-progress-circle-size:var(--spectrum-progress-circle-size-large);--spectrum-progress-circle-thickness:var(--spectrum-progress-circle-thickness-large)}@media (forced-colors:active){:host{--highcontrast-progress-circle-fill-border-color:Highlight;--highcontrast-progress-circle-fill-border-color-over-background:Highlight}.track{--spectrum-progress-circle-track-border-style:double}}:host{inline-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));block-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));direction:ltr;display:inline-block;position:relative;transform:translate(0,0)}.track{box-sizing:border-box;inline-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));block-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));border-style:var(--highcontrast-progress-circle-track-border-style,var(--mod-progress-circle-track-border-style,var(--spectrum-progress-circle-track-border-style)));border-width:var(--mod-progress-circle-thickness,var(--spectrum-progress-circle-thickness));border-radius:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));border-color:var(--mod-progress-circle-track-border-color,var(--spectrum-progress-circle-track-border-color))}.fills{block-size:100%;inline-size:100%;position:absolute;inset-block-start:0;inset-inline-start:0}.fill{box-sizing:border-box;inline-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));block-size:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));border-style:solid;border-width:var(--mod-progress-circle-thickness,var(--spectrum-progress-circle-thickness));border-radius:var(--mod-progress-circle-size,var(--spectrum-progress-circle-size));border-color:var(--highcontrast-progress-circle-fill-border-color,var(--mod-progress-circle-fill-border-color,var(--spectrum-progress-circle-fill-border-color)))}:host([static=white]) .track{border-color:var(--mod-progress-circle-track-border-color-over-background,var(--spectrum-progress-circle-track-border-color-over-background))}:host([static=white]) .fill{border-color:var(--highcontrast-progress-circle-fill-border-color-over-background,var(--mod-progress-circle-fill-border-color-over-background,var(--spectrum-progress-circle-fill-border-color-over-background)))}.fillMask1,.fillMask2{transform-origin:100%;block-size:100%;inline-size:50%;position:absolute;overflow:hidden;transform:rotate(180deg)}.fillSubMask1,.fillSubMask2{transform-origin:100%;block-size:100%;inline-size:100%;overflow:hidden;transform:rotate(-180deg)}.fillMask2{transform:rotate(0)}:host([indeterminate]) .fills{will-change:transform;transform-origin:50%;animation:1s cubic-bezier(.25,.78,.48,.89) infinite spectrum-fills-rotate;transform:translateZ(0)}:host([indeterminate]) .fillSubMask1{will-change:transform;animation:1s linear infinite spectrum-fill-mask-1;transform:translateZ(0)}:host([indeterminate]) .fillSubMask2{will-change:transform;animation:1s linear infinite spectrum-fill-mask-2;transform:translateZ(0)}:host{block-size:var(--mod-progress-circle-size,var(--_spectrum-progress-circle-size));inline-size:var(--mod-progress-circle-size,var(--_spectrum-progress-circle-size));--spectrum-progress-circle-size:inherit;--spectrum-progresscircle-m-over-background-track-fill-color:var(--spectrum-alias-track-fill-color-overbackground);--_spectrum-progress-circle-size:var(--spectrum-progress-circle-size,var(--spectrum-progress-circle-size-medium))}:host([size=s]){--_spectrum-progress-circle-size:var(--spectrum-progress-circle-size,var(--spectrum-progress-circle-size-small))}:host([size=l]){--_spectrum-progress-circle-size:var(--spectrum-progress-circle-size,var(--spectrum-progress-circle-size-large))}slot{display:none}.track,.fill{block-size:var(--mod-progress-circle-size,var(--_spectrum-progress-circle-size));border-radius:var(--mod-progress-circle-size,var(--_spectrum-progress-circle-size));inline-size:var(--mod-progress-circle-size,var(--_spectrum-progress-circle-size))}:host([indeterminate]) .fills,:host([indeterminate]) .fillSubMask1,:host([indeterminate]) .fillSubMask2{animation-duration:var(--spectrum-animation-duration-2000)}\n`;\nexport default styles;","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { getLabelFromSlot } from '@spectrum-web-components/shared/src/get-label-from-slot.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\n\nimport progressCircleStyles from './progress-circle.css.js';\n\n/**\n * @element sp-progress-circle\n */\nexport class ProgressCircle extends SizedMixin(SpectrumElement, {\n    validSizes: ['s', 'm', 'l'],\n}) {\n    public static override get styles(): CSSResultArray {\n        return [progressCircleStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public indeterminate = false;\n\n    @property({ type: String })\n    public label = '';\n\n    @property({ type: Boolean, reflect: true, attribute: 'over-background' })\n    public overBackground = false;\n\n    @property({ reflect: true })\n    public static?: 'white';\n\n    @property({ type: Number })\n    public progress = 0;\n\n    @query('slot')\n    private slotEl!: HTMLSlotElement;\n\n    private makeRotation(rotation: number): string | undefined {\n        return this.indeterminate\n            ? undefined\n            : `transform: rotate(${rotation}deg);`;\n    }\n\n    protected override willUpdate(changes: PropertyValues<this>): void {\n        if (changes.has('overBackground')) {\n            // Apply \"static\" from \"overBackground\", preferring \"static\",\n            // until the deprecation period is over.\n            this.static = this.overBackground\n                ? 'white'\n                : this.static || undefined;\n            if (window.__swc.DEBUG) {\n                if (this.overBackground) {\n                    window.__swc.warn(\n                        this,\n                        `<${this.localName}> element will stop accepting the \"over-background\" attribute, and its related \"overBackground\" property in a future release. Use the \"static\" attribute/property with a value of \"white\" instead.`,\n                        'https://opensource.adobe.com/spectrum-web-components/components/progress-circle/#static',\n                        { level: 'deprecation' }\n                    );\n                }\n            }\n        }\n    }\n\n    protected override render(): TemplateResult {\n        const styles = [\n            this.makeRotation(-180 + (180 / 50) * Math.min(this.progress, 50)),\n            this.makeRotation(\n                -180 + (180 / 50) * Math.max(this.progress - 50, 0)\n            ),\n        ];\n        const masks = ['Mask1', 'Mask2'];\n        return html`\n            <slot @slotchange=${this.handleSlotchange}></slot>\n            <div class=\"track\"></div>\n            <div class=\"fills\">\n                ${masks.map(\n                    (mask, index) => html`\n                        <div class=\"fill${mask}\">\n                            <div\n                                class=\"fillSub${mask}\"\n                                style=${ifDefined(styles[index])}\n                            >\n                                <div class=\"fill\"></div>\n                            </div>\n                        </div>\n                    `\n                )}\n            </div>\n        `;\n    }\n\n    protected handleSlotchange(): void {\n        const labelFromSlot = getLabelFromSlot(this.label, this.slotEl);\n        if (labelFromSlot) {\n            this.label = labelFromSlot;\n        }\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'progressbar');\n        }\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (!this.indeterminate && changes.has('progress')) {\n            this.setAttribute('aria-valuenow', '' + this.progress);\n        } else if (this.hasAttribute('aria-valuenow')) {\n            this.removeAttribute('aria-valuenow');\n        }\n        if (changes.has('label')) {\n            if (this.label.length) {\n                this.setAttribute('aria-label', this.label);\n            } else if (\n                changes.get('label') === this.getAttribute('aria-label')\n            ) {\n                this.removeAttribute('aria-label');\n            }\n        }\n\n        if (window.__swc.DEBUG) {\n            if (\n                !this.label &&\n                !this.getAttribute('aria-label') &&\n                !this.getAttribute('aria-labelledby') &&\n                !this.slotEl.assignedNodes().length\n            ) {\n                window.__swc.warn(\n                    this,\n                    '<sp-progress-circle> elements need one of the following to be accessible:',\n                    'https://opensource.adobe.com/spectrum-web-components/components/progress-circle/#accessibility',\n                    {\n                        type: 'accessibility',\n                        issues: [\n                            'value supplied to the \"label\" attribute, which will be displayed visually as part of the element, or',\n                            'text content supplied directly to the <sp-progress-circle> element, or',\n                            'value supplied to the \"aria-label\" attribute, which will only be provided to screen readers, or',\n                            'an element ID reference supplied to the \"aria-labelledby\" attribute, which will be provided by screen readers and will need to be managed manually by the parent application.',\n                        ],\n                    }\n                );\n            }\n        }\n    }\n}\n","/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport const getLabelFromSlot = (\n    label: string,\n    slotEl: HTMLSlotElement\n): string | null => {\n    if (label) return null;\n    const textContent = slotEl\n        .assignedNodes()\n        .reduce((accumulator: string, node: Node) => {\n            if (node.textContent) {\n                return accumulator + node.textContent;\n            } else {\n                return accumulator;\n            }\n        }, '');\n    if (textContent) {\n        return textContent.trim();\n    } else {\n        return null;\n    }\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { ProgressCircle } from './src/ProgressCircle.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-progress-circle', ProgressCircle);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'sp-progress-circle': ProgressCircle;\n    }\n}\n"],"names":["_templateObject","r","_taggedTemplateLiteral","ProgressCircle","u","h","validSizes","constructor","arguments","indeterminate","label","overBackground","progress","styles","f","makeRotation","e","this","concat","willUpdate","has","static","render","Math","min","max","d","handleSlotchange","map","t","l","_templateObject2","v","getLabelFromSlot","assignedNodes","reduce","n","textContent","trim","m","slotEl","firstUpdated","super","hasAttribute","setAttribute","updated","removeAttribute","length","get","getAttribute","i","a","type","Boolean","reflect","prototype","String","attribute","Number","b"],"sourceRoot":""}